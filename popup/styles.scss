/* DEFAULTS */

@font-face {
    font-family: 'Montserrat';
    font-style: normal;
    font-weight: 400;
    font-display: block;
    src: url(MontserratRegular-latin.woff2); // hint: the url has to be right from the the perspective of the stylesheet that imports this file
}

*,
*::before,
*::after {
    box-sizing: border-box; // generally a good idea :p
    margin: 0; // for <html> & <body>
    padding: 0; // for <html> & <body>
    border: none; // for <button>
    outline: none; // for <button> and other stuff
    background: none; // for <button>
    text-decoration: none; // for <a>
    color: inherit; // for <a>
    font: inherit; // for <button>, also effects <h1>
    -webkit-font-smoothing: antialiased; // i don't know if this even has an effect, but hey :D
    -moz-osx-font-smoothing: grayscale; // i don't know if this even has an effect, but hey :D
}


/* POPUP */

:root {
    font-family: Montserrat, sans-serif;
    font-weight: 400;
    font-size: 16px;
    color: black;
    text-shadow: 0 0.75px 1.5px rgba(0, 0, 0, 0.25);
}

body {
    width: 350px;   // to prevent collapse of popup window
    height: 280px;  //

    font: inherit; // override auto-injected stylesheet from chrome xD

    background-image: radial-gradient(#d2d2d2 1.5px, transparent 1.5px);
    background-position: 0 0;
    background-size: 20px 20px;

    // for absolutely positioned child 'div#ray-container'
    position: relative;

    display: flex;
    flex-flow: column;
    align-items: center;
    justify-content: center;

    div.slogan, button {
        margin: 14px 0;
    }
    div.slogan {
        font-size: 24px;
        letter-spacing: 0.5em;
        text-align: center;
        transition: opacity 5s; // slow fade-in
        &.hidden {
            transition: opacity 0.5s; // quick fade-out
            opacity: 0;
        }
    }
    button {
        width: 64px;
        height: 64px;
        border-radius: 4px;
        background-color: white;
        background-image: url('icon.svg');
        background-position: center center;
        background-size: 40px 40px;
        background-repeat: no-repeat;
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.25);
        transition: transform 0.3s;

        &:hover {
            cursor: pointer;
            transition-delay: 0.05s; // wait for the rays to slide into the viewport :p
            transform: scale(1.2);
        }

        &.check {
            background-image: url('check.svg');
        }

        &.cross {
            background-image: url('cross.svg');
        }
    }

    // container primarily exists for 'overflow: hidden' (which does not seem to work on body element)
    div#ray-container {
        position: absolute;
        z-index: -1;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        overflow: hidden;

        .ray {
            position: absolute;
            top: 50%;
            left: 50%;
            width: 500px;
            height: 4px;
            background-color: black;

            /* RAY LIFECYCLE:
                - (1/3) initial/default state outside the viewport
                - (2/3) hovered state: rays slide into the viewport
                - hovered rays can either return to initial state (1), or progress to their final state (3)
                - (3) clicked state: final state outside the viewport, so that rays swipe out perpendicular to their axis
                - after reaching their final state, rays are disposed
            */

            &.ray-A {
                transition: transform 0.4s;
                transform: translate(-50%, -50%) rotate(-45deg) translateX(-500px);
                &.mode-hovered {
                    transform: translate(-50%, -50%) rotate(-45deg);
                }
                &.mode-clicked {
                    transition: transform 0.6s linear;
                    transform: translate(-50%, -50%) rotate(-45deg) translateY(500px);
                }
            }
            &.ray-B {
                transition: transform 0.4s;
                transform: translate(-50%, -50%) rotate(-45deg) translateX(500px);
                &.mode-hovered {
                    transform: translate(-50%, -50%) rotate(-45deg);
                }
                &.mode-clicked {
                    transition: transform 0.6s linear;
                    transform: translate(-50%, -50%) rotate(-45deg) translateY(-500px);
                }
            }
        }
    }
}